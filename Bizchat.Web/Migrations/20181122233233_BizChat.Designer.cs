// <auto-generated />
using System;
using Bizchat.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bizchat.Web.Migrations
{
    [DbContext(typeof(BizchatDbContext))]
    [Migration("20181122233233_BizChat")]
    partial class BizChat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bizchat.Core.Entities.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contents");

                    b.Property<string>("Destination");

                    b.Property<int?>("SenderId");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Bizchat.Core.Entities.ChatRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OwnerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("Bizchat.Core.Entities.ChatUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ChatUsers");
                });

            modelBuilder.Entity("Bizchat.Ef.Tables.ChatRoomMembership", b =>
                {
                    b.Property<int>("ChatRoomId");

                    b.Property<int>("ChatUserId");

                    b.HasKey("ChatRoomId", "ChatUserId");

                    b.HasIndex("ChatUserId");

                    b.ToTable("ChatRoomMemberships");
                });

            modelBuilder.Entity("Bizchat.Ef.Tables.ChatRoomReceivedMessages", b =>
                {
                    b.Property<int>("ChatRoomId");

                    b.Property<int>("ChatMessageId");

                    b.HasKey("ChatRoomId", "ChatMessageId");

                    b.HasIndex("ChatMessageId");

                    b.ToTable("ChatRoomReceivedMessages");
                });

            modelBuilder.Entity("Bizchat.Core.Entities.ChatMessage", b =>
                {
                    b.HasOne("Bizchat.Core.Entities.ChatUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");
                });

            modelBuilder.Entity("Bizchat.Core.Entities.ChatRoom", b =>
                {
                    b.HasOne("Bizchat.Core.Entities.ChatUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("Bizchat.Ef.Tables.ChatRoomMembership", b =>
                {
                    b.HasOne("Bizchat.Core.Entities.ChatRoom", "ChatRoom")
                        .WithMany()
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bizchat.Core.Entities.ChatUser", "ChatUser")
                        .WithMany()
                        .HasForeignKey("ChatUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bizchat.Ef.Tables.ChatRoomReceivedMessages", b =>
                {
                    b.HasOne("Bizchat.Core.Entities.ChatMessage", "ChatMessage")
                        .WithMany()
                        .HasForeignKey("ChatMessageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bizchat.Core.Entities.ChatRoom", "ChatRoom")
                        .WithMany()
                        .HasForeignKey("ChatRoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
